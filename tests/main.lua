local fs = require("tests.utils.fs")
local LuaBF = require("src.bf")


local ROOT_DIR = fs.path() .. fs.sep() .. "examples" .. fs.sep()


local function readFile(path)
	return fs.readFile(ROOT_DIR .. path)
end

local function runCode(script)
	local luabf = LuaBF.new(script)
	return luabf:parse()
end


local tests = {}

tests.assert = function(file, output)
	local filepath = readFile(file)
	local code = runCode(filepath)

	local assertion = code == output
	local status = ""
	local color = ""

	if assertion then
		status = "pass"
		color = "\x1b[32m"
	else
		status = "fail"
		color = "\x1b[31m"
	end

	io.write(color)
	io.write("Test: " .. file .. "\n\tStatus: " .. status)
	io.write("\x1b[0m" .. "\n")

	if not assertion then
		print("\tExpected: " .. output)
		print("\tReceveid: " .. code)
	else
		print()
	end
end


tests.assert("hello_world.bf", "Hello, World!\n")
tests.assert("magdiel.bf", "Magdiel")

-- ASCII Art in Brainf*ck
tests.assert("chess.bf",
[[+-------+-------+-------+-------+-------+-------+-------+-------+
| [_|_] |::_,/|:|  /\\  |::\|/::|  \+/  |::/\\::|  _,/| |:[_|_]:|
|  [#]  |:/_#)\:|  \#/  |::(#)::|  {#}  |::\#/::| /_#)\ |::[#]::|
|  [#]  |::/#\\:|  (#)  |::(#)::|  {#}  |::(#)::|  /#\\ |::[#]::|
| (###) |:(###):| (###) |:(###):| (###) |:(###):| (###) |:(###):|
+-------+-------+-------+-------+-------+-------+-------+-------+
|:::::::|   _   |:::::::|   _   |:::::::|   _   |:::::::|   _   |
|::(#)::|  (#)  |::(#)::|  (#)  |::(#)::|  (#)  |::(#)::|  (#)  |
|::/#\::|  /#\  |::/#\::|  /#\  |::/#\::|  /#\  |::/#\::|  /#\  |
|:(###):| (###) |:(###):| (###) |:(###):| (###) |:(###):| (###) |
+-------+-------+-------+-------+-------+-------+-------+-------+
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
+-------+-------+-------+-------+-------+-------+-------+-------+
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
+-------+-------+-------+-------+-------+-------+-------+-------+
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
|       |:::::::|       |:::::::|       |:::::::|       |:::::::|
+-------+-------+-------+-------+-------+-------+-------+-------+
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
|:::::::|       |:::::::|       |:::::::|       |:::::::|       |
+-------+-------+-------+-------+-------+-------+-------+-------+
|   _   |:::::::|   _   |:::::::|   _   |:::::::|   _   |:::::::|
|  ( )  |::( )::|  ( )  |::( )::|  ( )  |::( )::|  ( )  |::( )::|
|  / \  |::/ \::|  / \  |::/ \::|  / \  |::/ \::|  / \  |::/ \::|
| (___) |:(___):| (___) |:(___):| (___) |:(___):| (___) |:(___):|
+-------+-------+-------+-------+-------+-------+-------+-------+
|:[_|_]:|  _,/| |::/\\::|  \|/  |::\+/::|  /\\  |::_,/|:| [_|_] |
|::[ ]::| /_ )\ |::\ /::|  ( )  |::{ }::|  \ /  |:/_ )\:|  [ ]  |
|::[ ]::|  / \\ |::( )::|  ( )  |::{ }::|  ( )  |::/ \\:|  [ ]  |
|:(___):| (___) |:(___):| (___) |:(___):| (___) |:(___):| (___) |
+-------+-------+-------+-------+-------+-------+----[) /\/\ (--+
]])
